shadow$provide[7]=function(Nc,Vb,pc,wb){function p(y){function O(ia){return(ia=Y.substring(ya).match(ia))?(ya+=ia[0].length,ia[0]):null}function X(){O(/^\s*/)}function la(){X();for(var ia=0,ea=[],Ha=[ea],aa=ea,Ba;Ba=O(/^(\()/)||O(/^(\))/)||O(/^(,)/)||O(Ma);){if("("===Ba)Ha.push(aa),aa=[],Ha[Ha.length-1].push(aa),ia++;else if(")"===Ba){if(0===aa.length)return null;aa=Ha.pop();if(!aa)return null;ia--;if(0===ia)break}else if(","===Ba)aa=[],Ha[Ha.length-1].push(aa);else{if(Ba.split(/\s/g).some(isNaN))return null;
Array.prototype.push.apply(aa,Ba.split(/\s/g).map(parseFloat))}X()}return 0!==ia?null:ea}function ua(){for(var ia=[],ea,Ha;Ha=O(Ma)||O(/^(,)/);)","===Ha?(ia.push(ea),ea=[]):Ha.split(/\s/g).some(isNaN)||(ea||(ea=[]),Array.prototype.push.apply(ea,Ha.split(/\s/g).map(parseFloat))),X();if(ea)ia.push(ea);else return null;return ia.length?ia:null}function Ea(){if(!O(/^(point)/i))return null;X();if(!O(/^(\()/))return null;var ia=ua();if(!ia)return null;X();return O(/^(\))/)?{type:"Point",coordinates:ia[0]}:
null}function ka(){if(!O(/^(multipoint)/i))return null;X();Y="MULTIPOINT ("+Y.substring(Y.indexOf("(")+1,Y.length-1).replace(/\(/g,"").replace(/\)/g,"")+")";var ia=la();if(!ia)return null;X();return{type:"MultiPoint",coordinates:ia}}function P(){if(!O(/^(multilinestring)/i))return null;X();var ia=la();if(!ia)return null;X();return{type:"MultiLineString",coordinates:ia}}function ca(){if(!O(/^(linestring)/i))return null;X();if(!O(/^(\()/))return null;var ia=ua();return ia&&O(/^(\))/)?{type:"LineString",
coordinates:ia}:null}function va(){var ia=[],ea;if(!O(/^(geometrycollection)/i))return null;X();if(!O(/^(\()/))return null;for(;ea=ra();)ia.push(ea),X(),O(/^(,)/),X();return O(/^(\))/)?{type:"GeometryCollection",geometries:ia}:null}function ra(){var ia;(ia=Ea()||ca())||(O(/^(polygon)/i)?(X(),ia=(ia=la())?{type:"Polygon",coordinates:ia}:null):ia=null);(ia=ia||ka()||P())||(O(/^(multipolygon)/i)?(X(),ia=(ia=la())?{type:"MultiPolygon",coordinates:ia}:null):ia=null);return ia||va()}y=y.split(";");var Y=
y.pop(),qa=(y.shift()||"").split("\x3d").pop(),ya=0;return function(ia){ia&&qa.match(/\d+/)&&(ia.crs={type:"name",properties:{name:"urn:ogc:def:crs:EPSG::"+qa}});return ia}(ra())}function ma(y){function O(Ea){return Ea.join(" ")}function X(Ea){return Ea.map(O).join(", ")}function la(Ea){return Ea.map(X).map(ua).join(", ")}function ua(Ea){return"("+Ea+")"}"Feature"===y.type&&(y=y.geometry);switch(y.type){case "Point":return"POINT ("+O(y.coordinates)+")";case "LineString":return"LINESTRING ("+X(y.coordinates)+
")";case "Polygon":return"POLYGON ("+la(y.coordinates)+")";case "MultiPoint":return"MULTIPOINT ("+X(y.coordinates)+")";case "MultiPolygon":return"MULTIPOLYGON ("+y.coordinates.map(la).map(ua).join(", ")+")";case "MultiLineString":return"MULTILINESTRING ("+la(y.coordinates)+")";case "GeometryCollection":return"GEOMETRYCOLLECTION ("+y.geometries.map(ma).join(", ")+")";default:throw Error("stringify requires a valid GeoJSON Feature or geometry object as input");}}pc.exports=p;pc.exports.parse=p;pc.exports.stringify=
ma;Nc=/[-+]?([0-9]*\.[0-9]+|[0-9]+)([eE][-+]?[0-9]+)?/;var Ma=new RegExp("^"+Nc.source+"(\\s"+Nc.source+"){1,}")}
goog.provide("module$node_modules$wellknown$index");
goog.global. module$node_modules$wellknown$index=shadow.js.require(7, {});
