shadow$provide[8]=function(Nc,Vb,pc,wb){function p(y,O){y=Math.round(y*O);y<<=1;0>y&&(y=~y);for(O="";32<=y;)O+=String.fromCharCode((32|y&31)+63),y>>=5;return O+=String.fromCharCode(y+63)}function ma(y){for(var O=[],X=0;X<y.length;X++)O.push(y[X].slice().reverse());return O}var Ma={decode:function(y,O){for(var X=0,la=0,ua=0,Ea=[],ka,P,ca,va=Math.pow(10,O||5);X<y.length;){P=ka=0;do ca=y.charCodeAt(X++)-63,P|=(ca&31)<<ka,ka+=5;while(32<=ca);O=P&1?~(P>>1):P>>1;ka=P=0;do ca=y.charCodeAt(X++)-63,P|=(ca&
31)<<ka,ka+=5;while(32<=ca);ka=P&1?~(P>>1):P>>1;la+=O;ua+=ka;Ea.push([la/va,ua/va])}return Ea},encode:function(y,O){if(!y.length)return"";O=Math.pow(10,O||5);for(var X=p(y[0][0],O)+p(y[0][1],O),la=1;la<y.length;la++){var ua=y[la],Ea=y[la-1];X+=p(ua[0]-Ea[0],O);X+=p(ua[1]-Ea[1],O)}return X},fromGeoJSON:function(y,O){y&&"Feature"===y.type&&(y=y.geometry);if(!y||"LineString"!==y.type)throw Error("Input must be a GeoJSON LineString");return Ma.encode(ma(y.coordinates),O)},toGeoJSON:function(y,O){y=Ma.decode(y,
O);return{type:"LineString",coordinates:ma(y)}}};"object"===typeof pc&&pc.exports&&(pc.exports=Ma)}
goog.provide("module$node_modules$polyline$src$polyline");
goog.global. module$node_modules$polyline$src$polyline=shadow.js.require(8, {});
